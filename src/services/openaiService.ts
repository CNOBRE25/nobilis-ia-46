export interface RelatorioDados {
  nome: string;
  tipo_investigado: string;
  cargo: string;
  unidade: string;
  data_fato: string;
  descricao: string;
  numero_sigpad?: string;
  numero_despacho?: string;
  data_despacho?: string;
  origem?: string;
  vitima?: string;
  matricula?: string;
  data_admissao?: string;
  diligencias_realizadas?: string[];
}

export interface RelatorioIA {
  cabecalho: string;
  das_preliminares: string;
  dos_fatos: string;
  das_diligencias: string;
  da_fundamentacao: string;
  da_conclusao: string;
  raw_response: string;
}

// Configura√ß√£o do Backend
const BACKEND_URL = import.meta.env.PROD 
  ? 'https://nobilis-ia-46.vercel.app' 
  : 'http://localhost:3002';

// Debug: Verificar se o backend est√° dispon√≠vel
console.log('üîç Debug - Backend URL:', BACKEND_URL);

const PROMPT_TEMPLATE = `
Voc√™ √© um ANALISTA JUR√çDICO MILITAR ESPECIALIZADO na elabora√ß√£o de RELAT√ìRIOS DE INVESTIGA√á√ÉO PRELIMINAR (IP) da Pol√≠cia Militar de Pernambuco, com expertise em:

‚Ä¢ C√≥digo Penal Militar (Decreto-Lei n¬∫ 1.001/69)
‚Ä¢ Regulamento Disciplinar da PM-PE (Decreto n¬∫ 11.817/86)
‚Ä¢ C√≥digo Penal Comum (Lei n¬∫ 2.848/40) e legisla√ß√£o correlata
‚Ä¢ C√≥digo de Processo Penal Militar (Decreto-Lei n¬∫ 1.002/69)
‚Ä¢ Estatuto dos Militares Estaduais (Lei n¬∫ 6.880/80)
‚Ä¢ C√°lculos de prescri√ß√£o penal e disciplinar
‚Ä¢ Jurisprud√™ncia dos Tribunais Superiores (STF, STJ, STM)

DADOS FORNECIDOS:
Nome: {nome}
Cargo/Patente: {cargo}
Unidade: {unidade}
Data do Fato: {data_fato}
Tipo de Procedimento: {tipo_investigado}
Descri√ß√£o dos Fatos: {descricao}
SIGPAD: {numero_sigpad}
Despacho: {numero_despacho}
Data Despacho: {data_despacho}
Origem: {origem}
V√≠tima: {vitima}
Matr√≠cula: {matricula}
Admiss√£o: {data_admissao}

ELABORE UM RELAT√ìRIO DE INVESTIGA√á√ÉO PRELIMINAR COMPLETO, FUNDAMENTADO E ESTRUTURADO:

## CABECALHO
RELAT√ìRIO DE INVESTIGA√á√ÉO PRELIMINAR
SIGPAD n¬∫: {numero_sigpad}
Despacho de Instaura√ß√£o n¬∫: {numero_despacho}
Data do Despacho: {data_despacho}
Origem: {origem}
Data do Fato: {data_fato}
V√≠tima: {vitima}
Investigado: {nome}
Matr√≠cula: {matricula}
Admiss√£o: {data_admissao}
Lota√ß√£o Atual: {unidade}

## I ‚Äì DAS PRELIMINARES

1.1. **Fatos Noticiados:**
[Resumo objetivo e t√©cnico dos fatos, identificando os elementos essenciais: quem, o qu√™, quando, onde, como e por qu√™]

1.2. **An√°lise Jur√≠dica Preliminar:**
[Identifica√ß√£o das poss√≠veis tipifica√ß√µes penais e/ou disciplinares aplic√°veis, com cita√ß√£o espec√≠fica dos artigos e fundamenta√ß√£o t√©cnica]

1.3. **C√°lculo de Prescri√ß√£o:**
[An√°lise da prescri√ß√£o penal e administrativa com base na data do fato, citando os artigos aplic√°veis e realizando o c√°lculo preciso]

1.4. **Compet√™ncia Jurisdicional:**
[Defini√ß√£o da compet√™ncia (Justi√ßa Militar Estadual, Justi√ßa Comum, ou ambas) com fundamenta√ß√£o legal]

## II ‚Äì DOS FATOS

2.1. **Narrativa dos Fatos:**
A presente investiga√ß√£o preliminar foi instaurada com a finalidade de apurar os fatos noticiados por meio da {origem}, que relata que, no dia {data_fato}, o policial militar {nome}, lotado no(a) {unidade}, teria {descricao}.

[Desenvolver narrativa detalhada, cronol√≥gica e objetiva dos fatos, destacando elementos relevantes para a an√°lise jur√≠dica]

2.2. **Elementos de Prova Identificados:**
[Listar e analisar os elementos probat√≥rios dispon√≠veis ou que poderiam ser colhidos]

2.3. **Contexto Funcional:**
[Analisar se o fato ocorreu em servi√ßo, de folga, ou em situa√ß√£o h√≠brida, e suas implica√ß√µes jur√≠dicas]

## III ‚Äì DAS DILIG√äNCIAS

3.1. **Dilig√™ncias Realizadas:**
‚Ä¢ Colheita de depoimentos
‚Ä¢ Requisi√ß√£o de documentos
‚Ä¢ An√°lise de registros funcionais
‚Ä¢ Verifica√ß√£o de antecedentes
‚Ä¢ [Outras dilig√™ncias espec√≠ficas ao caso]

3.2. **Documentos Colhidos:**
‚Ä¢ Ficha Funcional do investigado
‚Ä¢ Extrato do SIGPAD
‚Ä¢ Registros de ocorr√™ncia
‚Ä¢ [Documentos espec√≠ficos do caso]

3.3. **Resumo Anal√≠tico das Dilig√™ncias:**
[Exposi√ß√£o sint√©tica dos elementos apurados e sua relev√¢ncia para a conclus√£o]

## IV ‚Äì DA FUNDAMENTA√á√ÉO

4.1. **An√°lise F√°tica:**
[Consolida√ß√£o dos elementos f√°ticos coletados, estabelecendo o nexo causal e a materialidade dos fatos]

4.2. **An√°lise Jur√≠dica:**
[Fundamenta√ß√£o t√©cnica com base na legisla√ß√£o vigente, doutrina e jurisprud√™ncia, analisando:
‚Ä¢ Adequa√ß√£o t√≠pica
‚Ä¢ Elementos subjetivos
‚Ä¢ Causas de exclus√£o de ilicitude
‚Ä¢ Causas de exclus√£o de culpabilidade]

4.3. **Aplica√ß√£o da Legisla√ß√£o:**
[Cita√ß√£o e aplica√ß√£o espec√≠fica dos artigos do CPM, CP, C√≥digo Disciplinar, Estatuto, conforme o caso]

4.4. **Jurisprud√™ncia Aplic√°vel:**
[Cita√ß√£o de precedentes relevantes dos Tribunais Superiores, quando aplic√°vel]

## V ‚Äì DA CONCLUS√ÉO

5.1. **S√≠ntese dos Elementos:**
[Resumo dos principais elementos f√°ticos e jur√≠dicos identificados]

5.2. **Recomenda√ß√£o T√©cnica:**
[Conclus√£o fundamentada, recomendando uma das seguintes provid√™ncias:
‚Ä¢ Instaura√ß√£o de SAD (Sindicato Administrativo Disciplinar)
‚Ä¢ Instaura√ß√£o de IPM (Inqu√©rito Policial Militar)
‚Ä¢ Instaura√ß√£o de PADS (Processo Administrativo Disciplinar Sumar√≠ssimo)
‚Ä¢ Redistribui√ß√£o para outra unidade
‚Ä¢ Arquivamento por aus√™ncia de elementos suficientes
‚Ä¢ Arquivamento por prescri√ß√£o]

5.3. **Justificativa Legal:**
[Fundamenta√ß√£o t√©cnica da recomenda√ß√£o, considerando:
‚Ä¢ Grau de relev√¢ncia dos fatos
‚Ä¢ Exist√™ncia de ind√≠cios m√≠nimos de autoria e materialidade
‚Ä¢ Crit√©rios de oportunidade e conveni√™ncia da administra√ß√£o p√∫blica
‚Ä¢ Interesse p√∫blico na apura√ß√£o]

RECIFE, [Data atual]

INSTRU√á√ïES T√âCNICAS OBRIGAT√ìRIAS:
‚Ä¢ Use APENAS legisla√ß√£o vigente e atualizada
‚Ä¢ Calcule datas de prescri√ß√£o com precis√£o matem√°tica
‚Ä¢ Cite artigos espec√≠ficos com numera√ß√£o correta
‚Ä¢ Seja t√©cnico, objetivo e fundamentado
‚Ä¢ Considere jurisprud√™ncia relevante dos Tribunais Superiores
‚Ä¢ Aplique corretamente as compet√™ncias jurisdicionais
‚Ä¢ Mantenha linguagem jur√≠dica formal e t√©cnica
‚Ä¢ Estruture o relat√≥rio de forma l√≥gica e coesa
‚Ä¢ Evite redund√¢ncias e seja conciso
‚Ä¢ Priorize a clareza e objetividade na exposi√ß√£o
`;

const parsearRelatorio = (response: string): RelatorioIA => {
  // Extrair se√ß√µes do relat√≥rio oficial
  const extrairSecao = (texto: string, titulo: string): string => {
    const regex = new RegExp(`##\\s*${titulo}[\\s\\S]*?\\n([\\s\\S]*?)(?=\\n##|$)`, 'i');
    const match = texto.match(regex);
    return match ? match[1].trim() : 'N√£o especificado';
  };

  const extrairCabecalho = (texto: string): string => {
    const regex = new RegExp(`##\\s*CABECALHO[\\s\\S]*?\\n([\\s\\S]*?)(?=\\n##\\s*I\\s*‚Äì|$)`, 'i');
    const match = texto.match(regex);
    return match ? match[1].trim() : 'RELAT√ìRIO DE INVESTIGA√á√ÉO PRELIMINAR';
  };

  return {
    cabecalho: extrairCabecalho(response),
    das_preliminares: extrairSecao(response, 'I ‚Äì DAS PRELIMINARES'),
    dos_fatos: extrairSecao(response, 'II ‚Äì DOS FATOS'),
    das_diligencias: extrairSecao(response, 'III ‚Äì DAS DILIG√äNCIAS'),
    da_fundamentacao: extrairSecao(response, 'IV ‚Äì DA FUNDAMENTA√á√ÉO'),
    da_conclusao: extrairSecao(response, 'V ‚Äì DA CONCLUS√ÉO'),
    raw_response: response
  };
};

// Fallback: Gera um relat√≥rio simulado para ambiente de desenvolvimento ou erro na API
function gerarRelatorioSimulado(dados: RelatorioDados) {
  return Promise.resolve({
    cabecalho: 'RELAT√ìRIO DE INVESTIGA√á√ÉO PRELIMINAR (SIMULADO)',
    das_preliminares: 'Simula√ß√£o: Preliminares do caso para ' + (dados.nome || 'NOME N√ÉO INFORMADO'),
    dos_fatos: 'Simula√ß√£o: Fatos do processo.',
    das_diligencias: 'Simula√ß√£o: Dilig√™ncias realizadas.',
    da_fundamentacao: 'Simula√ß√£o: Fundamenta√ß√£o jur√≠dica.',
    da_conclusao: 'Simula√ß√£o: Conclus√£o e encaminhamentos.',
    raw_response: 'Este √© um relat√≥rio simulado para ambiente de desenvolvimento.'
  });
}

export const openaiService = {
  async gerarRelatorioJuridico(dados: RelatorioDados): Promise<RelatorioIA> {
    try {
      console.log('üîç Iniciando gera√ß√£o de relat√≥rio via backend...');
      
      const response = await fetch(`${BACKEND_URL}/api/openai/gerar-relatorio`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          dadosProcesso: dados
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        console.error('‚ùå Erro no backend:', errorData);
        throw new Error(`Erro no backend: ${errorData.error || response.statusText}`);
      }

      const data = await response.json();
      console.log('‚úÖ Relat√≥rio recebido do backend');
      
      return parsearRelatorio(data.relatorio);
    } catch (error) {
      console.error('‚ùå Erro ao gerar relat√≥rio:', error);
      throw error;
    }
  },

  // Novo m√©todo: interpretarTipificacao
  /**
   * Recebe um texto livre e a data do fato, retorna a tipifica√ß√£o penal sugerida e a data da prescri√ß√£o.
   */
  async interpretarTipificacao({ texto, dataFato }: { texto: string, dataFato: Date }) {
    try {
      console.log('üîç Iniciando an√°lise de tipifica√ß√£o via backend...');
      
      const response = await fetch(`${BACKEND_URL}/api/openai/interpretar-tipificacao`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          descricaoCrime: texto,
          contexto: `Data do fato: ${dataFato instanceof Date ? dataFato.toLocaleDateString('pt-BR') : dataFato}`
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        console.error('‚ùå Erro no backend:', errorData);
        throw new Error(`Erro no backend: ${errorData.error || response.statusText}`);
      }

      const data = await response.json();
      console.log('‚úÖ Resposta recebida do backend');
      
      // Converter formato do backend para o formato esperado pelo frontend
      return {
        tipificacao: data.tipificacao_principal || 'N√£o identificado',
        fundamentacao: data.fundamentacao || '',
        tipificacoesAlternativas: Array.isArray(data.tipificacoes_alternativas) 
          ? data.tipificacoes_alternativas.join(', ') 
          : data.tipificacoes_alternativas || '',
        tipificacoesDisciplinares: Array.isArray(data.tipificacoes_disciplinares) 
          ? data.tipificacoes_disciplinares.join(', ') 
          : data.tipificacoes_disciplinares || '',
        dataPrescricao: data.prescricao_penal || '',
        dataPrescricaoAdm: data.prescricao_administrativa || '',
        competencia: data.competencia || '',
        observacoes: data.observacoes || ''
      };
    } catch (error) {
      console.error('‚ùå Erro ao interpretar tipifica√ß√£o:', error);
      throw error;
    }
  }
}; 